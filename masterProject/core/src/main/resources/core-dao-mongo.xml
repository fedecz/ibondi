<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   			http://www.springframework.org/schema/data/mongo
    		http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">


	<bean id="locationsDao" class="com.uade.pfi.core.dao.MongoDBSessionsDao">
		<property name="template" ref="mongoTemplate" />
	</bean>

 	<!-- mongo:mapping-converter base-package="com.uade.pfi.core.beans" id="converter"/> --> 
 	
<!--  	<bean id="mappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext"/> -->

<!--  	<bean id="converter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter"> -->
<!--  		<constructor-arg ref="mappingContext"/> -->
<!--  		<property name="mongo" ref="mongo"/> -->
<!--  	</bean> -->
	
	<!-- Offers convenience methods and automatic mapping between MongoDB JSON 
		documents and your domain classes. -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="#{serviceProperties['pfiMongoDB.db']}" />
		<constructor-arg name="userCredentials"> 
			<bean class="org.springframework.data.authentication.UserCredentials">
				<constructor-arg name="username" value="#{serviceProperties['pfiMongoDB.username']}"/>
				<constructor-arg name="password" value="#{serviceProperties['pfiMongoDB.password']}"/>
			</bean>
		</constructor-arg>
<!-- 		<constructor-arg name="defaultCollectionName" value="sessions"/> -->
<!-- 		<constructor-arg name="mongoConverter" ref="converter"/> -->
<!-- 		<property name="username" value="#{serviceProperties['pfiMongoDB.username']}" /> -->
<!-- 		<property name="password" value="#{serviceProperties['pfiMongoDB.password']}" /> -->
		<property name="writeResultChecking" value="EXCEPTION"/>
	</bean>
	

</beans>
